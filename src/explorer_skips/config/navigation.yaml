amcl:
  ros__parameters:
    use_sim_time: False
    base_frame_id: base_footprint  # Changed from base_link to base_footprint
    odom_frame_id: odom
    global_frame_id: map
    scan_topic: scan               # Changed from scan_filtered to scan
    laser_max_range: 12.0            # Adjusted for LDS-02 max range
    laser_min_range: 0.03            # Adjusted for LDS-02 min range
    max_beams: 2160                  # Adjusted to match LDS-02 beams
    laser_model_type: "likelihood_field"
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    transform_tolerance: 0.1
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    pf_err: 0.05
    pf_z: 0.99
    update_min_d: 0.2
    update_min_a: 0.2
    resample_interval: 1
    save_pose_rate: 0.5
    always_reset_initial_pose: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_costmap_topic: global_costmap/costmap_raw
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 5.0
    behavior_plugins:
      ["spin", "backup", "drive_on_heading", "wait", "assisted_teleop"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_footprint  # Changed from base_link
    transform_timeout: 0.1
    simulate_ahead_time: 4.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    odom_topic: odometry/filtered
    robot_base_frame: base_footprint  # Changed from base_link
    transform_tolerance: 0.1  
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: [navigate_to_pose, navigate_through_poses]
    navigate_to_pose:
      plugin: nav2_bt_navigator/NavigateToPoseNavigator
    navigate_through_poses:
      plugin: nav2_bt_navigator/NavigateThroughPosesNavigator
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

# controller_server:
#   ros__parameters:
#     use_sim_time: False

#     controller_frequency: 20.0        # Increased frequency for smoother control    
#     min_x_velocity_threshold: 0.02    # Adjusted for TurtleBot3
#     min_y_velocity_threshold: 0.02
#     min_theta_velocity_threshold: 0.2 # Adjusted for TurtleBot3
#     failure_tolerance: 2.0

#     progress_checker_plugin: "progress_checker"
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.2
#       movement_time_allowance: 20.0

#     goal_checker_plugin: "goal_checker"
#     current_goal_checker: "goal_checker"
#     goal_checker:
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.05         # Reduced for precision
#       yaw_goal_tolerance: 0.17        # Approximately 10 degrees in radians
#       stateful: True

#     controller_plugins: ["FollowPath"]
#     FollowPath:
#       plugin: "nav2_graceful_controller::GracefulController"      

#       Velocity/accelaration limits also have to be adjusted in the velocity smoother
#       desired_linear_vel: 0.05
#       lookahead_dist: 0.6
#       min_lookahead_dist: 0.3
#       max_lookahead_dist: 1.5
#       lookahead_time: 3.5
#       transform_tolerance: 0.1
#       use_velocity_scaled_lookahead_dist: true
#       min_approach_linear_velocity: 0.01
#       approach_velocity_scaling_dist: 0.6
#       use_collision_detection: false
#       max_allowed_time_to_collision_up_to_carrot: 1.0

#       use_regulated_linear_velocity_scaling: true # Whether to use the regulated features for path curvature (e.g. slow on high curvature paths).
#       use_cost_regulated_linear_velocity_scaling: true # Whether to use the regulated features for proximity to obstacles (e.g. slow in close proximity to obstacles).

#       regulated_linear_scaling_min_radius: 0.5
#       regulated_linear_scaling_min_speed: 0.1
#       allow_reversing: false
#       use_rotate_to_heading: true
#       rotate_to_heading_min_angle: 0.485
#       it is only used when rotating to heading (use_rotate_to_heading)
#       for some reason rotate_to_heading_angular_vel is ignored and robot rotates with
#       max_angular_accel/10. angular velocity (that's why it is set to higher value)
#       max_angular_accel: 0.4
#       rotate_to_heading_angular_vel: 0.4
#       max_robot_pose_search_dist: 5.0
#       use_interpolation: true

controller_server:
  ros__parameters:
    # controller server parameters (see Controller Server for more info)
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05
      movement_time_allowance: 20.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.5
      stateful: True
    # DWB controller parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.04
      max_vel_y: 0.0
      max_vel_theta: 0.4
      min_speed_xy: 0.0
      max_speed_xy: 0.04
      min_speed_theta: 0.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 8.0
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.1
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      limit_vel_cmd_in_traj: False
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: False

      robot_base_frame: base_footprint  # Changed from base_link
      update_frequency: 2.0
      publish_frequency: 2.0
      global_frame: odom

      width: 3     
      height: 3
      resolution: 0.02
      rolling_window: True
      always_send_full_costmap: True
      

      robot_radius: 0.14
      #footprint: "[[0.17, 0.17], [0.17, -0.17], [-0.17, -0.17], [-0.17, 0.17]]"
      #footprint_padding: 0.03

      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        inflation_radius: 0.3
        cost_scaling_factor: 2.58
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 0.5
          clearing: True
          marking: True
          data_type: "LaserScan"
          obstacle_max_range: 11.5        # LDS-02 max range minus some margin
          obstacle_min_range: 0.03        # LDS-02 min range
          raytrace_max_range: 12.0        # Match LDS-02 LIDAR max range
          raytrace_min_range: 0.03        # Match LDS-02 LIDAR min range
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1

  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: False

      update_frequency: 2.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_footprint   # Changed from base_link

      width: 15
      height: 15
      resolution: 0.02
      always_send_full_costmap: True
      track_unknown_space: True
      lethal_cost_threshold: 10

      robot_radius: 0.14 #0.105
      #footprint: "[[0.17, 0.17], [0.17, -0.17], [-0.17, -0.17], [-0.17, 0.17]]"
      #footprint_padding: 0.03

      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        inflation_radius: 0.3
        cost_scaling_factor: 2.58
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 0.5
          clearing: True
          marking: True
          data_type: "LaserScan"
          obstacle_max_range: 11.5        # LDS-02 max range minus some margin
          obstacle_min_range: 0.03        # LDS-02 min range
          raytrace_max_range: 12.0        # Match LDS-02 LIDAR max range
          raytrace_min_range: 0.03        # Match LDS-02 LIDAR min range
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: True
        map_subscribe_transient_local: True

  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "map.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    use_sim_time: False
    expected_planner_frequency: 1.0

    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

smoother_server:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False

    smoothing_frequency: 20.0            # Increased for smoother transitions
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.04, 0.0, 0.4]      # Max linear and angular velocities
    min_velocity: [-0.04, 0.0, -0.4]      # Min linear and angular velocities
    max_accel: [2.0, 0.0, 3.2]           # Adjusted for TurtleBot3
    max_decel: [-2.0, 0.0, -3.2]  
    # used in the CLOSED_LOOP feedback mode
    # odom_topic: "odom"
    # odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 0.1                # Reduced for responsiveness